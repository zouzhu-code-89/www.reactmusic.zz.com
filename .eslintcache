[{"F:\\Desktop\\www.reactmusic.zz.com\\src\\index.tsx":"1","F:\\Desktop\\www.reactmusic.zz.com\\src\\reportWebVitals.ts":"2","F:\\Desktop\\www.reactmusic.zz.com\\src\\App.tsx":"3","F:\\Desktop\\www.reactmusic.zz.com\\src\\views\\Login\\index.tsx":"4","F:\\Desktop\\www.reactmusic.zz.com\\src\\api\\login.ts":"5","F:\\Desktop\\www.reactmusic.zz.com\\src\\utils\\request.ts":"6","F:\\Desktop\\www.reactmusic.zz.com\\src\\services\\login\\login.ts":"7","F:\\Desktop\\www.reactmusic.zz.com\\src\\plugin\\antd.tsx":"8"},{"size":500,"mtime":1609067450757,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1609067450757,"results":"11","hashOfConfig":"10"},{"size":236,"mtime":1609228905304,"results":"12","hashOfConfig":"10"},{"size":2351,"mtime":1609231501326,"results":"13","hashOfConfig":"10"},{"size":2540,"mtime":1609045254617,"results":"14","hashOfConfig":"10"},{"size":571,"mtime":1609125402111,"results":"15","hashOfConfig":"10"},{"size":1729,"mtime":1609227916611,"results":"16","hashOfConfig":"10"},{"size":91,"mtime":1609230004227,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"116llmp",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Desktop\\www.reactmusic.zz.com\\src\\index.tsx",[],["36","37"],"F:\\Desktop\\www.reactmusic.zz.com\\src\\reportWebVitals.ts",[],"F:\\Desktop\\www.reactmusic.zz.com\\src\\App.tsx",["38"],"F:\\Desktop\\www.reactmusic.zz.com\\src\\views\\Login\\index.tsx",["39","40"],"F:\\Desktop\\www.reactmusic.zz.com\\src\\api\\login.ts",[],"F:\\Desktop\\www.reactmusic.zz.com\\src\\utils\\request.ts",[],"F:\\Desktop\\www.reactmusic.zz.com\\src\\services\\login\\login.ts",["41","42"],"/**\r\n * @description 登录模块，登录的一系列事务处理，校验邮箱、验证码等等\r\n * @time 2020/12/23\r\n */\r\nimport { cellphoneLogin, cellphoneIsRegister, registerAccount } from \"../../api/login\";\r\n\r\nclass LoginServices {\r\n    /**\r\n     * 账号登录\r\n     * @param phone 电话号码\r\n     * @param password 账号密码\r\n     */\r\n    public async login(userMessage:any) {\r\n        if(await this.accountRepeatRegistered(userMessage.phone)){\r\n            cellphoneLogin({ phone:userMessage.phone, password:userMessage.password }).then((data: any) => {\r\n                if (data.loginType == 1) {\r\n                    return data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 注册账号\r\n     * @param phone    电话号码\r\n     * @param password 账号密码\r\n     * @param captcha  验证码\r\n     * @param nickname 昵称\r\n     */\r\n    public async registeredAccount(userMessage:any) {\r\n        if(await this.accountRepeatRegistered(userMessage.phone)){\r\n            registerAccount({phone: userMessage.phone,\r\n                             captcha: userMessage.captcha, \r\n                             password: userMessage.password, \r\n                             nickname: userMessage.nickname}).then((data:any)=>{\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检测电话号码账号是否注册\r\n     * @param phone \r\n     */\r\n    private accountRepeatRegistered(phone: string):Promise<boolean>{\r\n        return cellphoneIsRegister({ phone }).then((data: any) => {\r\n            if (data.exist == 1) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default new LoginServices();\r\n\r\n","F:\\Desktop\\www.reactmusic.zz.com\\src\\plugin\\antd.tsx",["43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":4,"column":10,"nodeType":"50","messageId":"51","endLine":4,"endColumn":16},{"ruleId":"52","severity":1,"message":"53","line":52,"column":127,"nodeType":"54","messageId":"55","endLine":52,"endColumn":156,"fix":"56"},{"ruleId":"52","severity":1,"message":"57","line":59,"column":139,"nodeType":"54","messageId":"55","endLine":59,"endColumn":171,"fix":"58"},{"ruleId":"59","severity":1,"message":"60","line":16,"column":36,"nodeType":"61","messageId":"62","endLine":16,"endColumn":38},{"ruleId":"59","severity":1,"message":"60","line":47,"column":28,"nodeType":"61","messageId":"62","endLine":47,"endColumn":30},{"ruleId":"63","severity":1,"message":"64","line":5,"column":1,"nodeType":"65","endLine":7,"endColumn":2},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-useless-computed-key","Unnecessarily computed property ['phone'] found.","Property","unnecessarilyComputedProperty",{"range":"68","text":"69"},"Unnecessarily computed property ['password'] found.",{"range":"70","text":"71"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",[1466,1475],"'phone'",[1896,1908],"'password'"]